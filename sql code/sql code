-- code to create users table
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    whatsapp VARCHAR(20) NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE cards (
    id INT AUTO_INCREMENT PRIMARY KEY,                -- Unique identifier for each card
    name VARCHAR(20) NOT NULL,                        -- Name of the card (e.g., 'Module1', 'Full Access')
    price DECIMAL(10, 2) NOT NULL,                    -- Price of the card
    status ENUM('available', 'sold') NOT NULL,        -- Availability status of the card
    card_type ENUM('module', 'mock', 'full_access')   -- Type of card, can be 'module', 'mock', or 'full_access'
);

-- Insert sample data into the cards table
INSERT INTO cards (name, price, status, card_type) VALUES 
('Module1', 1500, 'available', 'module'),
('Module2', 1500, 'available', 'module'),
('Module3', 1500, 'available', 'module'),
('Module4', 1500, 'available', 'module'),
('Mock', 1000, 'available', 'mock'),
('Full Access', 5000.00, 'available', 'full_access');


-- Create the user_card_access table
CREATE TABLE user_card_access (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Unique identifier for each record
    user_id INT NOT NULL,               -- User ID (foreign key)
    card_id INT NOT NULL,               -- Card ID (foreign key)
    access_granted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- When access was granted
    FOREIGN KEY (user_id) REFERENCES users(id),  -- Reference to the users table
    FOREIGN KEY (card_id) REFERENCES cards(id)   -- Reference to the cards table
);

-- Insert sample data into the user_card_access table
-- Assuming user ID 1 purchased the Module1 card
INSERT INTO user_card_access (user_id, card_id) VALUES 
(1, (SELECT id FROM cards WHERE name = 'Module1' AND card_type = 'module'));

-- Insert sample data for a user who purchased the 'Full Access' card
-- Assuming user ID 2 purchased the 'Full Access' card
INSERT INTO user_card_access (user_id, card_id) VALUES 
(2, (SELECT id FROM cards WHERE name = 'Full Access' AND card_type = 'full_access'));

-- Grant access to all module and mock cards for the user who purchased 'Full Access'
INSERT INTO user_card_access (user_id, card_id)
SELECT 2, id
FROM cards
WHERE card_type IN ('module', 'mock');



-- to add admin
CREATE TABLE admin (
    id INT AUTO_INCREMENT PRIMARY KEY,  
    email VARCHAR(255) NOT NULL UNIQUE,  
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP  
);

INSERT INTO admin (email) VALUES ('kdalalhp@gmail.com');


