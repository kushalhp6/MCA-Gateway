{
    "exam_name": "OOPs Set 1",
    "total_marks": 20,
    "time_limit": 20,
    "questions": [
        {
            "question": "Which is the most appropriate comment on the following class definition?<br><br><pre>class Student<br>{<br> int a;<br> public : float a;<br>};</pre>",
            "options": {
                "A": "Error : same variable name can’t be used twice",
                "B": "Error : Public must come first",
                "C": "Error : data types are different for same variable",
                "D": "It is correct"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which feature of OOP is indicated by the following code?<br><br><pre>class student { int marks; };<br>class topper: public student { int age; topper(int age) { this.age = age; } };</pre>",
            "options": {
                "A": "Inheritance",
                "B": "Polymorphism",
                "C": "Inheritance and polymorphism",
                "D": "Encapsulation and Inheritance"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which class/set of classes can illustrate polymorphism in the following code?<br><br><pre>abstract class student<br>{<br> public : int marks;<br> calc_grade();<br>}<br>class topper: public student<br>{<br> public : calc_grade()<br> {<br> return 10;<br> }<br>};<br>class average: public student<br>{<br> public : calc_grade()<br> {<br> return 20;<br> }<br>};<br>class failed { int marks; };</pre>",
            "options": {
                "A": "Only class student can show polymorphism",
                "B": "Only class student and topper together can show polymorphism",
                "C": "All class student, topper, and average together can show polymorphism",
                "D": "Class failed should also inherit class student for this code to work for polymorphism"
            },
            "correct_answer": "C"
        },
        {
            "question": "What is the output of the following program?<br><br><pre>class student<br>{<br> public : int marks;<br> void disp()<br> {<br> cout << \"its base class\";<br> }<br>};<br>class topper: public student<br>{<br> public :<br> void disp()<br> {<br> cout << \"Its derived class\";<br> }<br>};<br>void main() {<br> student s;<br> topper t;<br> s.disp();<br> t.disp();<br>}</pre>",
            "options": {
                "A": "Its base classIts derived class",
                "B": "Its base class Its derived class",
                "C": "Its derived classIts base class",
                "D": "Its derived class Its base class"
            },
            "correct_answer": "A"
        },
        {
            "question": "Find the output of the following program.<br><br><pre>class education<br>{<br> char name[10];<br> public : disp()<br> {<br> cout << \"Its education system\";<br> }<br>};<br>class school: public education<br>{<br> public: void dsip()<br> {<br> cout << \"Its school education system\";<br> }<br>};<br>void main()<br>{<br> school s;<br> s.disp();<br>}</pre>",
            "options": {
                "A": "Its school education system",
                "B": "Its education system",
                "C": "Its school education systemIts education system",
                "D": "Its education systemIts school education system"
            },
            "correct_answer": "B"
        },
        {
            "question": "What is the output of the following program?<br><br><pre>using namespace std;<br><br>void foo(int x) {<br> cout << x;<br>}<br><br>void foo(double x) {<br> cout << x;<br>}<br><br>int main() {<br> foo(5);<br> return 0;<br>}</pre>",
            "options": {
                "A": "5",
                "B": "5.0",
                "C": "Compile Error",
                "D": "Runtime Error"
            },
            "correct_answer": "A"
        },
        {
            "question": "Consider the following code and select the correct option.<br><br><pre>class student<br>{<br> int marks;<br> public : int* fun()<br> {<br> return &marks;<br> }<br>};<br>main()<br>{<br> student s;<br> int *ptr = s.fun();<br> return 0;<br>}</pre>",
            "options": {
                "A": "This code is good to go",
                "B": "This code may result in undesirable conditions",
                "C": "This code will generate error",
                "D": "This code violates encapsulation"
            },
            "correct_answer": "D"
        },
        {
            "question": "Consider the code and select the wrong choice.<br><br><pre>class hero<br>{<br> char name[10];<br> public : void disp()<br> {<br> cout << name;<br> }<br>};</pre>",
            "options": {
                "A": "This maintains encapsulation",
                "B": "This code doesn’t maintain encapsulation",
                "C": "This code is vulnerable",
                "D": "This code gives error"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which object will be created first?<br><br><pre>class student<br>{<br> int marks;<br>};<br>student s1, s2, s3;</pre>",
            "options": {
                "A": "s1 then s2 then s3",
                "B": "s3 then s2 then s1",
                "C": "s2 then s3 then s1",
                "D": "all are created at same time"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which among the following is correct for the class defined below?<br><br><pre>class student<br>{<br> int marks;<br> public: student(){}<br> student(int x)<br> {<br> marks = x;<br> }<br>};<br>main()<br>{<br> student s1(100);<br> student s2();<br> student s3 = 100;<br> return 0;<br>}</pre>",
            "options": {
                "A": "Object s3, syntax error",
                "B": "Only object s1 and s2 will be created",
                "C": "Program runs and all objects are created",
                "D": "Program will give compile time error"
            },
            "correct_answer": "C"
        },
        {
            "question": "Which constructor will be called from the object created in the code below?<br><br><pre>class A<br>{<br> int i;<br> A()<br> {<br> i = 0; cout << i;<br> }<br> A(int x = 0)<br> {<br> i = x; cout << i;<br> }<br>};<br>A obj1;</pre>",
            "options": {
                "A": "Default constructor",
                "B": "Parameterized constructor",
                "C": "Compile time error",
                "D": "Run time error"
            },
            "correct_answer": "C"
        },
        {
            "question": "Which constructor will be called from the object obj2 in the following program?<br><br><pre>class A<br>{<br> int i;<br> A()<br> {<br> i = 0;<br> }<br> A(int x)<br> {<br> i = x + 1;<br> }<br> A(int y, int x)<br> {<br> i = x + y;<br> }<br>};<br>A obj1(10);<br>A obj2(10, 20);<br>A obj3;</pre>",
            "options": {
                "A": "A(int x)",
                "B": "A(int y)",
                "C": "A(int y, int x)",
                "D": "A(int y; int x)"
            },
            "correct_answer": "C"
        },
        {
            "question": "Which among the following is correct for the code given below?<br><br><pre>class student<br>{<br> private: student()<br> {<br> }<br> public: student(int x)<br> {<br> marks = x;<br> }<br>};</pre>",
            "options": {
                "A": "The object can never be created",
                "B": "The object can be created without parameters",
                "C": "Only the object with only 1 parameter can be created",
                "D": "Only the object with some parameters can be created"
            },
            "correct_answer": "C"
        },
        {
            "question": "What is the output of the following program?<br><br><pre>using namespace std;<br><br>void changeValue(int &ref) {<br> ref = 10;<br> }<br><br>int main() {<br> int x = 5;<br> changeValue(x);<br> cout << x;<br> return 0;<br>}</pre>",
            "options": {
                "A": "5",
                "B": "10",
                "C": "Compile Error",
                "D": "0"
            },
            "correct_answer": "B"
        },
        {
            "question": "Which option is false for the following code?<br><br><pre>class A<br>{<br> private : int sum(int x, int y)<br> {<br> return x + y;<br> }<br> public: A()<br> {<br> }<br> A(int x, int y)<br> {<br> cout << sum(x, y);<br> }<br>};</pre>",
            "options": {
                "A": "Constructor can be created with zero argument",
                "B": "Constructor prints sum, if two parameters are passed with object creation",
                "C": "Constructor will give error if float values are passed",
                "D": "Constructor will take 0 as default value of parameters if not passed"
            },
            "correct_answer": "D"
        },
        {
            "question": "Which member will never be used from the following class?<br><br><pre>class A<br>{<br> int marks; char name[20];<br> public : A()<br> {<br> marks = 100;<br> }<br> void disp()<br> {<br> cout << \"Marks= \" << marks;<br> cout << \"Student\";<br> }<br>};</pre>",
            "options": {
                "A": "name variable will never be used",
                "B": "marks variable will never be used",
                "C": "constructor will never be used",
                "D": "disp() function will never be used"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which data member in the following code will be used whenever an object is created?<br><br><pre>class A<br>{<br> int x; int y; int z;<br> public : A()<br> {<br> y = 100; x = 100 * y;<br> }<br>};</pre>",
            "options": {
                "A": "x will be used",
                "B": "y will be used",
                "C": "z will be used",
                "D": "All will be used"
            },
            "correct_answer": "A"
        },
        {
            "question": "Which member can be considered most secure in the code below?<br><br><pre>class A<br>{<br> int a;<br> private : int b;<br> protected : int c;<br> public : int d;<br>};</pre>",
            "options": {
                "A": "a",
                "B": "b",
                "C": "c",
                "D": "d"
            },
            "correct_answer": "B"
        },
        {
            "question": "Which among the following is correct for the code given below?<br><br><pre>class A<br>{<br> private : A()<br> {<br> }<br> public : A(int x)<br> {<br> }<br>};<br>A a;<br>A b(100);</pre>",
            "options": {
                "A": "Program will give compile time error",
                "B": "Program will run fine",
                "C": "Program will give runtime error",
                "D": "Program will give logical error"
            },
            "correct_answer": "A"
        },
        {
            "question": "For the following code, choose the correct option.<br><br><pre>class A<br>{<br> int marks;<br> protected : A()<br> {<br> marks = 100;<br> }<br> public : A(int x)<br> {<br> marks = x;<br> }<br>};</pre>",
            "options": {
                "A": "The instances can be created only in subclasses",
                "B": "The instances can be created only in main() function",
                "C": "The instances can be created only in parent class",
                "D": "The instances can be created anywhere in the program"
            },
            "correct_answer": "A"
        }
    ]
}
